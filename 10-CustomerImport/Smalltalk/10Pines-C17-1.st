Object subclass: #Address	instanceVariableNames: 'id streetName streetNumber town zipCode province'	classVariableNames: ''	poolDictionaries: ''	category: '10Pines-C17-1-Model'!!Address methodsFor: 'comparing' stamp: 'JulianBayardo 11/7/2017 00:00'!= anAddress	^ self streetName = anAddress streetName and: (self streetNumber = anAddress streetNumber and: (self town = anAddress town and: (self zipCode = anAddress zipCode and: (self province = anAddress province)))).! !!Address methodsFor: 'comparing' stamp: 'JulianBayardo 11/7/2017 00:08'!hash	^ self streetName hash		bitXor:			(self streetNumber hash bitXor: (self town hash bitXor: (self zipCode hash bitXor: self province hash)))! !!Address methodsFor: 'initialization' stamp: 'JulianBayardo 11/6/2017 23:57'!initializeStreet: aStreetName number: aStreetNumber town: aTownName province: aProvinceName zipCode: aZipCode	streetName := aStreetName.	streetNumber := aStreetNumber.	town := aTownName.	province := aProvinceName .	zipCode := aZipCode.! !!Address methodsFor: 'accessing' stamp: 'HernanWilkinson 10/28/2016 16:12'!town	^town! !!Address methodsFor: 'accessing' stamp: 'HernanWilkinson 10/28/2016 16:11'!province	^province! !!Address methodsFor: 'accessing' stamp: 'HernanWilkinson 10/28/2016 16:13'!zipCode	^zipCode! !!Address methodsFor: 'accessing' stamp: 'HernanWilkinson 10/28/2016 16:12'!streetNumber	^streetNumber ! !!Address methodsFor: 'accessing' stamp: 'HernanWilkinson 10/28/2016 16:12'!streetName	^streetName ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Address class	instanceVariableNames: ''!!Address class methodsFor: 'as yet unclassified' stamp: 'JulianBayardo 11/6/2017 23:55'!street: aStreetName number: aStreetNumber town: aTownName province: aProvinceName zipCode: aZipCode	^ self new initializeStreet: aStreetName number: aStreetNumber town: aTownName province: aProvinceName zipCode: aZipCode! !Object subclass: #Customer	instanceVariableNames: 'id firstName lastName identificationType identificationNumber addresses identification'	classVariableNames: ''	poolDictionaries: ''	category: '10Pines-C17-1-Model'!!Customer methodsFor: 'initialization' stamp: 'JulianBayardo 11/7/2017 00:20'!initialize	addresses := OrderedCollection new! !!Customer methodsFor: 'initialization' stamp: 'JulianBayardo 11/7/2017 00:17'!initializeFirst: aFirstName last: aLastName identificationType: anIdentificationType identificationNumber: anIdentificationNumber	firstName := aFirstName.	lastName := aLastName.	identificationNumber := anIdentificationNumber .	identificationType := anIdentificationType .! !!Customer methodsFor: 'name' stamp: 'HernanWilkinson 10/28/2016 16:15'!lastName	^lastName ! !!Customer methodsFor: 'name' stamp: 'HernanWilkinson 10/28/2016 16:15'!firstName		^firstName ! !!Customer methodsFor: 'identification' stamp: 'HernanWilkinson 10/28/2016 16:13'!identificationType		^identificationType ! !!Customer methodsFor: 'identification' stamp: 'HernanWilkinson 10/28/2016 16:13'!identificationNumber		^identificationNumber ! !!Customer methodsFor: 'addresses' stamp: 'HernanWilkinson 10/28/2016 13:27'!addAddress: anAddress 	addresses add: anAddress ! !!Customer methodsFor: 'addresses' stamp: 'JulianBayardo 11/7/2017 00:29'!addresses	^ addresses asSet.! !!Customer methodsFor: 'comparing' stamp: 'JulianBayardo 11/7/2017 00:30'!= aCustomer	^ self identificationType = aCustomer identificationType		and:			(self identificationNumber = aCustomer identificationNumber				and: (self addresses = aCustomer addresses))! !!Customer methodsFor: 'comparing' stamp: 'JulianBayardo 11/7/2017 00:20'!hash	^ self identificationType hash bitXor: (self identificationNumber hash bitXor: self addresses hash).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Customer class	instanceVariableNames: ''!!Customer class methodsFor: 'accessing' stamp: 'JulianBayardo 11/7/2017 00:18'!first: aFirstName last: aLastName identificationType: anIdentificationType identificationNumber: anIdentificationNumber	^ self new initializeFirst: aFirstName last: aLastName identificationType: anIdentificationType identificationNumber: anIdentificationNumber .! !Object subclass: #CustomerImport	instanceVariableNames: 'inputStream session currentLine'	classVariableNames: ''	poolDictionaries: ''	category: '10Pines-C17-1-Model'!!CustomerImport methodsFor: 'initialization' stamp: 'JulianBayardo 11/9/2017 18:37'!initializeStream: aStream into: aDatabase 	inputStream := aStream.	session := aDatabase.! !!CustomerImport methodsFor: 'data' stamp: 'JulianBayardo 11/9/2017 18:45'!parseCustomerFrom: aLine	| lineComponents |	lineComponents := aLine substrings: {$,}.	^ Customer		first: lineComponents second		last: lineComponents third		identificationType: lineComponents fourth		identificationNumber: lineComponents fifth.! !!CustomerImport methodsFor: 'data' stamp: 'JulianBayardo 11/9/2017 18:51'!import	| newCustomer |	currentLine := inputStream nextLine.	[ currentLine notNil ]		whileTrue: [ (currentLine beginsWith: 'C')				ifTrue: [ newCustomer := self parseCustomerFrom: currentLine.					session persist: newCustomer ].			(currentLine beginsWith: 'A')				ifTrue: [ | newAddress |					newAddress := self parseAddressFrom: currentLine.					newCustomer addAddress: newAddress ].			currentLine := inputStream nextLine ]! !!CustomerImport methodsFor: 'data' stamp: 'JulianBayardo 11/9/2017 18:45'!parseAddressFrom: aLine	| lineComponents |	lineComponents := aLine substrings: {$,}.	^ Address		street: lineComponents second		number: lineComponents third asInteger		town: lineComponents fourth		province: lineComponents sixth		zipCode: lineComponents fifth asInteger.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CustomerImport class	instanceVariableNames: ''!!CustomerImport class methodsFor: 'instance creation' stamp: 'JulianBayardo 11/9/2017 18:35'!fromStream: aStream into: aDatabase	^ super new initializeStream: aStream into: aDatabase.! !TestCase subclass: #CustomerImportTest	instanceVariableNames: 'inputStream session'	classVariableNames: ''	poolDictionaries: ''	category: '10Pines-C17-1-Model'!!CustomerImportTest methodsFor: 'data' stamp: 'JulianBayardo 11/7/2017 00:33'!instancePerez	| customer |	customer := Customer		first: 'Juan'		last: 'Perez'		identificationType: 'C'		identificationNumber: '23-25666777-9'.	customer		addAddress:			(Address				street: 'Alem'				number: 1122				town: 'CABA'				province: 'CABA'				zipCode: 1001).	^ customer! !!CustomerImportTest methodsFor: 'data' stamp: 'JulianBayardo 11/7/2017 00:39'!instanceCustomerDatabaseStream	^ ReadStream		on:			'C,Pepe,Sanchez,D,22333444A,San Martin,3322,Olivos,1636,BsAsA,Maipu,888,Florida,1122,Buenos AiresC,Juan,Perez,C,23-25666777-9A,Alem,1122,CABA,1001,CABA'! !!CustomerImportTest methodsFor: 'data' stamp: 'JulianBayardo 11/7/2017 00:31'!instancePepe	| customer |	customer := Customer		first: 'Pepe'		last: 'Sanchez'		identificationType: 'D'		identificationNumber: '22333444'.	customer		addAddress:			(Address				street: 'San Martin'				number: 3322				town: 'Olivos'				province: 'BsAs'				zipCode: 1636).	customer		addAddress:			(Address				street: 'Maipu'				number: 888				town: 'Florida'				province: 'Buenos Aires'				zipCode: 1122).	^ customer.! !!CustomerImportTest methodsFor: 'tests' stamp: 'JulianBayardo 11/9/2017 18:38'!test00hasAllCustomers	(CustomerImport fromStream: inputStream into: session) import.	self assert: (session selectAllOfType: Customer) size equals: 2! !!CustomerImportTest methodsFor: 'tests' stamp: 'JulianBayardo 11/9/2017 18:38'!test02containsJuanAndAddresses	| searchResults |	(CustomerImport fromStream: inputStream into: session) import.	searchResults := session select: [ :aCustomer | aCustomer firstName = 'Juan' ] ofType: Customer.	self assert: searchResults size equals: 1.	self assert: (searchResults at: 1) equals: self instancePerez! !!CustomerImportTest methodsFor: 'tests' stamp: 'JulianBayardo 11/9/2017 18:36'!test01containsPepeAndAddresses	| searchResults |	(CustomerImport fromStream: inputStream into: session) import.	searchResults := session		select: [ :aCustomer | aCustomer firstName = 'Pepe' ]		ofType: Customer.	self assert: searchResults size equals: 1.	self assert: (searchResults at: 1) equals: self instancePepe! !!CustomerImportTest methodsFor: 'running' stamp: 'JulianBayardo 11/7/2017 00:40'!setUp	inputStream := self instanceCustomerDatabaseStream.	session := DataBaseSession		for:			(Array				with:					(ClassMapping						withDefaultTableNameFor: Address						mappingAll:							(Array								with: (EmbededMapping withDefaultFieldNameFor: #streetName)								with: (EmbededMapping withDefaultFieldNameFor: #streetNumber)								with: (EmbededMapping withDefaultFieldNameFor: #town)								with: (EmbededMapping withDefaultFieldNameFor: #zipCode)								with: (EmbededMapping withDefaultFieldNameFor: #province)))				with:					(ClassMapping						withDefaultTableNameFor: Customer						mappingAll:							(Array								with: (EmbededMapping withDefaultFieldNameFor: #firstName)								with: (EmbededMapping withDefaultFieldNameFor: #lastName)								with: (EmbededMapping withDefaultFieldNameFor: #identificationType)								with: (EmbededMapping withDefaultFieldNameFor: #identificationNumber)								with: (OneToManyMapping withDefaultFieldNameFor: #addresses ofType: Address)))).	session open.	session beginTransaction! !!CustomerImportTest methodsFor: 'running' stamp: 'DamianFurman 11/6/2017 20:03'!tearDown	session commit.	session close.	inputStream close! !'From Pharo6.0 of 13 May 2016 [Latest update: #60520] on 9 November 2017 at 6:51:57.050725 pm'!!String methodsFor: '*10Pines-C17-1' stamp: 'HernanWilkinson 10/31/2016 23:57'!asPlural		^self last = $s 		ifTrue: [ self, 'es' ]		ifFalse: [ self, 's' ]! !'From Pharo6.0 of 13 May 2016 [Latest update: #60520] on 9 November 2017 at 6:51:57.051725 pm'!!Object methodsFor: '*10Pines-C17-1' stamp: 'HernanWilkinson 10/31/2016 19:27'!toDo: aString 	! !